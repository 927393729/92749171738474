--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v82=0;while true do if (v82==0) then v19=v0(v3(v30,1,1));return "";end end else local v83=v2(v0(v30,16));if v19 then local v93=v5(v83,v19);v19=nil;return v93;else return v83;end end end);local function v20(v31,v32,v33) if v33 then local v84=0 -(0 + 0) ;local v85;while true do if (v84==(0 -0)) then v85=(v31/(2^(v32-1)))%((3 -(1 -0))^(((v33-(2 -1)) -(v32-(620 -(555 + (1129 -(68 + 997)))))) + (932 -(857 + 74)))) ;return v85-(v85%((1839 -(226 + 1044)) -(367 + 201))) ;end end else local v86=927 -(214 + 713) ;local v87;while true do if (v86==(0 + 0)) then v87=(1 + (4 -3))^(v32-(878 -(282 + 595))) ;return (((v31%(v87 + v87))>=v87) and (1638 -(1523 + 114))) or 0 ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=117 -(32 + 85) ;local v36;local v37;while true do if (v35==(1 -0)) then return (v37 * (251 + 5)) + v36 ;end if (v35==(350 -(87 + 263))) then v36,v37=v1(v16,v18,v18 + 1 + 1 );v18=v18 + (959 -(892 + 65)) ;v35=2 -(1 + 0) ;end end end local function v23() local v38=0 -0 ;local v39;local v40;local v41;local v42;while true do if (v38==0) then v39,v40,v41,v42=v1(v16,v18,v18 + (955 -(802 + 150)) );v18=v18 + (10 -6) ;v38=1 -0 ;end if (v38==(1 + (0 -0))) then return (v42 * (16778213 -(915 + 82))) + (v41 * (185570 -120034)) + (v40 * (150 + 106)) + v39 ;end end end local function v24() local v43=1187 -(1069 + 118) ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==(6 -3)) then if (v48==(0 -0)) then if (v47==0) then return v49 * 0 ;else local v116=0 + 0 ;while true do if (v116==((0 + 0) -(885 -(261 + 624)))) then v48=1 + 0 ;v46=791 -((653 -285) + 423) ;break;end end end elseif (v48==(6433 -4386)) then return ((v47==((1098 -(1020 + 60)) -(10 + 8))) and (v49 * ((3 -2)/((1569 -1127) -((1275 -(814 + 45)) + 26))))) or (v49 * NaN) ;end return v8(v49,v48-1023 ) * (v46 + (v47/(((1429 -(630 + 793)) -4)^52))) ;end if (v43==1) then v46=1;v47=(v20(v45,1 + 0 ,35 -(50 -35) ) * (2^(470 -(145 + 293)))) + v44 ;v43=2;end if (v43==((1064 -632) -(44 + 386))) then v48=v20(v45,1507 -(998 + 488) ,10 + 21 );v49=((v20(v45,27 + 5 )==(773 -(201 + 571))) and  -((62 + 1077) -(116 + 1022))) or (4 -(14 -11)) ;v43=2 + 1 ;end if (v43==(0 -0)) then v44=v23();v45=v23();v43=1;end end end local function v25(v50) local v51=0 + 0 ;local v52;local v53;while true do if (v51==3) then return v6(v53);end if (v51==(6 -4)) then v53={};for v94=1748 -(760 + 775 + 212) , #v52 do v53[v94]=v2(v1(v3(v52,v94,v94)));end v51=3;end if (v51==(1913 -(1789 + 124))) then v52=nil;if  not v50 then local v108=0;while true do if (v108==(766 -(745 + 21))) then v50=v23();if (v50==(0 + 0)) then return "";end break;end end end v51=2 -1 ;end if ((3 -2)==v51) then v52=v3(v16,v18,(v18 + v50) -1 );v18=v18 + v50 ;v51=1 + 1 ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v54=(function() return 285 -(134 + 151) ;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();local v60=(function() return;end)();local v61=(function() return;end)();while true do if (v54==2) then v61=(function() return {};end)();for v96= #"[",v60 do local v97=(function() return 1665 -(970 + 695) ;end)();local v98=(function() return;end)();local v99=(function() return;end)();local v100=(function() return;end)();while true do if ((1 -0)==v97) then v100=(function() return nil;end)();while true do if (v98~=1) then else if (v99== #"{") then v100=(function() return v21()~=(1990 -(582 + 1408)) ;end)();elseif (v99==(6 -4)) then v100=(function() return v24();end)();elseif (v99== #"19(") then v100=(function() return v25();end)();end v61[v96]=(function() return v100;end)();break;end if (v98~=(0 -0)) then else local v127=(function() return 0;end)();while true do if (v127~=1) then else v98=(function() return 3 -2 ;end)();break;end if (v127==(1824 -(1195 + 629))) then v99=(function() return v21();end)();v100=(function() return nil;end)();v127=(function() return 1;end)();end end end end break;end if (v97==0) then v98=(function() return 0 -0 ;end)();v99=(function() return nil;end)();v97=(function() return 242 -(187 + 54) ;end)();end end end v59[ #"xxx"]=(function() return v21();end)();v54=(function() return 783 -(162 + 618) ;end)();end if (v54==(1 + 0)) then local v91=(function() return 0 + 0 ;end)();while true do if (v91==1) then v60=(function() return v23();end)();v54=(function() return 3 -1 ;end)();break;end if (v91~=0) then else v58=(function() return {};end)();v59=(function() return {v56,v57,nil,v58};end)();v91=(function() return 1 + 0 ;end)();end end end if ((1636 -(1373 + 263))==v54) then local v92=(function() return 0;end)();while true do if ((1001 -(451 + 549))==v92) then v57=(function() return {};end)();v54=(function() return 1;end)();break;end if (v92==(0 + 0)) then v55=(function() return function(v117,v118,v119) local v120=(function() return 0 -0 ;end)();local v121=(function() return;end)();while true do if (v120~=0) then else v121=(function() return 0;end)();while true do if (v121==(0 -0)) then v117[v118-#":" ]=(function() return v119();end)();return v117,v118,v119;end end break;end end end;end)();v56=(function() return {};end)();v92=(function() return 1;end)();end end end if (v54==(1387 -(746 + 638))) then for v101= #":",v23() do local v102=(function() return v21();end)();if (v20(v102, #"}", #">")==(0 + 0)) then local v111=(function() return 0;end)();local v112=(function() return;end)();local v113=(function() return;end)();local v114=(function() return;end)();local v115=(function() return;end)();while true do if (v111==1) then local v122=(function() return 0 -0 ;end)();local v123=(function() return;end)();while true do if (v122==0) then v123=(function() return 341 -(218 + 123) ;end)();while true do if (v123==(1582 -(1535 + 46))) then v111=(function() return 2;end)();break;end if (v123==0) then v114=(function() return nil;end)();v115=(function() return nil;end)();v123=(function() return 1 + 0 ;end)();end end break;end end end if (v111~=0) then else local v124=(function() return 0;end)();local v125=(function() return;end)();while true do if (v124==0) then v125=(function() return 0;end)();while true do if ((0 + 0)~=v125) then else v112=(function() return 0;end)();v113=(function() return nil;end)();v125=(function() return 1;end)();end if (v125==1) then v111=(function() return 1;end)();break;end end break;end end end if (v111~=2) then else while true do if (v112~=(562 -(306 + 254))) then else local v128=(function() return 0 + 0 ;end)();while true do if (v128==(1 -0)) then v112=(function() return  #"asd";end)();break;end if (v128==0) then if (v20(v114, #"~", #" ")== #":") then v115[1469 -(899 + 568) ]=(function() return v61[v115[2 + 0 ]];end)();end if (v20(v114,4 -2 ,605 -(268 + 335) )~= #"[") then else v115[ #"asd"]=(function() return v61[v115[ #"19("]];end)();end v128=(function() return 291 -(60 + 230) ;end)();end end end if (v112~=(572 -(426 + 146))) then else local v129=(function() return 0 + 0 ;end)();while true do if (v129==1) then v112=(function() return  #"/";end)();break;end if (v129==(1456 -(282 + 1174))) then v113=(function() return v20(v102,813 -(569 + 242) , #"asd");end)();v114=(function() return v20(v102, #"0836",6);end)();v129=(function() return 1;end)();end end end if (v112== #"-19") then if (v20(v114, #"-19", #"gha")~= #" ") then else v115[ #"xnxx"]=(function() return v61[v115[ #"asd1"]];end)();end v56[v101]=(function() return v115;end)();break;end if ( #"["~=v112) then else local v131=(function() return 0 -0 ;end)();local v132=(function() return;end)();while true do if (v131~=(0 + 0)) then else v132=(function() return 0;end)();while true do if (v132~=(1025 -(706 + 318))) then else v112=(function() return 2;end)();break;end if ((1251 -(721 + 530))~=v132) then else v115=(function() return {v22(),v22(),nil,nil};end)();if (v113==(0 -0)) then local v559=(function() return 0 + 0 ;end)();local v560=(function() return;end)();while true do if ((700 -(271 + 429))==v559) then v560=(function() return 0;end)();while true do if (v560==0) then v115[ #"xnx"]=(function() return v22();end)();v115[ #"asd1"]=(function() return v22();end)();break;end end break;end end elseif (v113== #"\\") then v115[ #"asd"]=(function() return v23();end)();elseif (v113==(2 + 0)) then v115[ #"91("]=(function() return v23() -(2^16) ;end)();elseif (v113== #"-19") then local v1003=(function() return 1500 -(1408 + 92) ;end)();local v1004=(function() return;end)();while true do if (0==v1003) then v1004=(function() return 1086 -(461 + 625) ;end)();while true do if (v1004==0) then v115[ #"gha"]=(function() return v23() -(2^(1304 -(993 + 295))) ;end)();v115[ #"?id="]=(function() return v22();end)();break;end end break;end end end v132=(function() return 1 + 0 ;end)();end end break;end end end end break;end end end end for v103= #"<",v23() do v57,v103,v28=(function() return v55(v57,v103,v28);end)();end return v59;end end end local function v29(v62,v63,v64) local v65=v62[1172 -(418 + 753) ];local v66=v62[2];local v67=v62[3];return function(...) local v68=v65;local v69=v66;local v70=v67;local v71=v27;local v72=1 + 0 ;local v73= -(1 + 0);local v74={};local v75={...};local v76=v12("#",...) -(1 + 0) ;local v77={};local v78={};for v88=529 -(406 + 123) ,v76 do if ((3008>1924) and (v88>=v70)) then v74[v88-v70 ]=v75[v88 + (1770 -(1749 + 20)) ];else v78[v88]=v75[v88 + 1 + 0 ];end end local v79=(v76-v70) + (1323 -(1249 + 73)) ;local v80;local v81;while true do local v89=0;while true do if ((295==295) and (v89==1)) then if (v81<=(10 + 16)) then if (v81<=(1157 -(466 + 679))) then if ((4828>=1725) and (v81<=(11 -(9 -3)))) then if (v81<=(5 -3)) then if (v81<=(1900 -(106 + 1794))) then local v135=0 + 0 ;local v136;while true do if (v135==(1 + 0)) then v78[v80[5 -3 ]]=v78[v80[7 -4 ]][v80[118 -(4 + (2066 -(1869 + 87))) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[587 -((197 -140) + 527) ];v135=(3330 -(484 + 1417)) -((87 -46) + 1386) ;end if (v135==(107 -(17 + 86))) then v72=v72 + 1 + 0 ;v80=v68[v72];do return;end break;end if (v135==(6 -3)) then v72=v72 + (2 -1) ;v80=v68[v72];v136=v80[168 -(122 + 44) ];do return v13(v78,v136,v73);end v135=6 -2 ;end if (v135==(6 -4)) then v72=v72 + 1 ;v80=v68[v72];v136=v80[2 + (0 -0) ];do return v78[v136](v13(v78,v136 + 1 + 0 ,v80[5 -2 ]));end v135=3;end if (v135==(65 -(30 + 35))) then v136=nil;v78[v80[2]]=v64[v80[3 + 0 ]];v72=v72 + (1258 -(1043 + 214)) ;v80=v68[v72];v135=1;end end elseif (v81>(3 -2)) then local v174;local v175;local v176;local v177;v177=v80[1215 -((1096 -(48 + 725)) + 889) ];v176=v78[v177];for v516=v177 + (2 -1) ,v80[(953 -369) -(361 + (587 -368)) ] do v176=v176   .. v78[v516] ;end v78[v80[2]]=v176;v72=v72 + (321 -(53 + 267)) ;v80=v68[v72];v78[v80[2]][v80[1 + 2 ]]=v78[v80[417 -(9 + 6 + 398) ]];v72=v72 + (983 -(18 + 964)) ;v80=v68[v72];v78[v80[7 -5 ]][v80[2 + 1 ]]=v80[3 + 1 ];v72=v72 + (851 -(20 + 830)) ;v80=v68[v72];v78[v80[2 + 0 ]]={};v72=v72 + ((338 -211) -(116 + 10)) ;v80=v68[v72];v78[v80[1 + 1 ]][v80[3]]=v80[742 -(542 + 196) ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[2 + 1 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[4 -2 ]]=v64[v80[7 -4 ]];v72=v72 + (1552 -(316 + 810 + 425)) ;v80=v68[v72];v78[v80[407 -(118 + 287) ]]=v78[v80[3]][v80[(5 + 10) -11 ]];v72=v72 + (1122 -(118 + 1003)) ;v80=v68[v72];v78[v80[2]]=v64[v80[8 -5 ]];v72=v72 + (378 -(142 + 235)) ;v80=v68[v72];v175=v80[2];v177=v78[v80[13 -10 ]];v78[v175 + 1 ]=v177;v78[v175]=v177[v80[1 + (856 -(152 + 701)) ]];v72=v72 + (978 -(553 + 424)) ;v80=v68[v72];v78[v80[3 -1 ]]=v80[3 + (1311 -(430 + 881)) ];v72=v72 + 1 + 0 ;v80=v68[v72];v175=v80[2 + 0 + 0 ];v78[v175]=v78[v175](v13(v78,v175 + 1 + 0 ,v80[2 + 1 ]));v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[5 -(898 -(557 + 338)) ]]=v78[v80[3]][v80[8 -4 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v78[v80[1 + 0 + 2 ]][v80[19 -15 ]];v72=v72 + (754 -(239 + 514)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[(3753 -2421) -(797 + 532) ]][v80[3 + 1 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v175=v80[4 -2 ];v78[v175]=v78[v175](v78[v175 + (1203 -(373 + 829)) ]);v72=v72 + ((2563 -1831) -(476 + 255)) ;v80=v68[v72];v78[v80[(3007 -1875) -((794 -425) + 761) ]]=v80[3];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[(803 -(499 + 302)) -(866 -(39 + 827)) ]]=v64[v80[3]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2]]=v78[v80[241 -(64 + 174) ]][v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 -0 ]]=v64[v80[339 -(144 + 192) ]];v72=v72 + (217 -(42 + (480 -306))) ;v80=v68[v72];v175=v80[2 + 0 ];v177=v78[v80[3 + 0 ]];v78[v175 + 1 + 0 ]=v177;v78[v175]=v177[v80[(3367 -1859) -(363 + 1141) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1582 -(1183 + 397) ]]=v80[8 -5 ];v72=v72 + 1 + 0 ;v80=v68[v72];v175=v80[2 + 0 ];v78[v175]=v78[v175](v13(v78,v175 + (1976 -(1913 + 62)) ,v80[11 -8 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[5 -(3 -0) ]]=v78[v80[1936 -(565 + 1368) ]][v80[15 -11 ]];v72=v72 + (1662 -(1477 + 184)) ;v80=v68[v72];v78[v80[2 -0 ]]=v78[v80[3 + 0 ]][v80[1 + 3 ]];v72=v72 + (857 -(564 + 292)) ;v80=v68[v72];v78[v80[(5 -3) -0 ]]=v78[v80[8 -5 ]][v80[4]];v72=v72 + (305 -(244 + 60)) ;v80=v68[v72];v175=v80[2 + 0 ];v78[v175]=v78[v175](v78[v175 + 1 ]);v72=v72 + (477 -(41 + 435)) ;v80=v68[v72];v78[v80[1003 -(938 + 11 + 52) ]]=v80[3 + 0 ];v72=v72 + (1126 -(936 + 189)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v64[v80[1616 -((2476 -911) + 48) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v175=v80[1140 -(782 + 356) ];v177=v78[v80[3]];v78[v175 + (268 -(176 + 91)) ]=v177;v78[v175]=v177[v80[10 -6 ]];v72=v72 + (1 -(104 -(103 + 1))) ;v80=v68[v72];v78[v80[1094 -(975 + 117) ]]=v80[3];v72=v72 + (1876 -(157 + 1718)) ;v80=v68[v72];v175=v80[2 + 0 ];v78[v175]=v78[v175](v13(v78,v175 + (3 -2) ,v80[3]));v72=v72 + 1 ;v80=v68[v72];v175=v80[2];v177=v78[v80[(564 -(475 + 79)) -7 ]];v78[v175 + ((2202 -1183) -(697 + 321)) ]=v177;v78[v175]=v177[v80[10 -6 ]];v72=v72 + 1 ;v80=v68[v72];v175=v80[6 -4 ];v78[v175]=v78[v175](v78[v175 + (1 -0) ]);v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[5 -2 ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2]]=v64[v80[1230 -(322 + 905) ]];v72=v72 + (612 -(602 + 2 + 7)) ;v80=v68[v72];v175=v80[1191 -(449 + 740) ];v78[v175]=v78[v175]();v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[875 -(826 + 46) ];v72=v72 + (948 -(216 + 29 + 702)) ;v80=v68[v72];v177=v80[9 -6 ];v176=v78[v177];for v517=v177 + 1 ,v80[2 + 2 ] do v176=v176   .. v78[v517] ;end v78[v80[2]]=v176;v72=v72 + (1899 -(260 + 1638)) ;v80=v68[v72];v78[v80[442 -((1885 -(1395 + 108)) + 58) ]][v80[9 -6 ]]=v78[v80[4 + (0 -0) ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[5 -3 ]][v80[1208 -(902 + 303) ]]=v80[8 -4 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]={};v72=v72 + (2 -(1205 -(7 + 1197))) ;v80=v68[v72];v78[v80[2]][v80[1 + 1 + 1 ]]=v80[1694 -(1121 + 569) ];v72=v72 + (215 -(22 + 192)) ;v80=v68[v72];v78[v80[685 -(483 + 200) ]]=v80[3];v72=v72 + (1464 -(1404 + 59)) ;v80=v68[v72];v78[v80[5 -3 ]]=v64[v80[3 -0 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v78[v80[768 -(468 + 297) ]][v80[(198 + 368) -(334 + 228) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[6 -4 ]]=v78[v80[6 -3 ]][v80[6 -(321 -(27 + 292)) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[238 -(141 + (278 -183)) ]]=v78[v80[3 + 0 ]][v80[9 -5 ]];v72=v72 + 1 ;v80=v68[v72];v175=v80[4 -2 ];v78[v175]=v78[v175](v78[v175 + 1 + 0 ]);v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[2 + 1 ];v72=v72 + (1 -0) ;v80=v68[v72];v177=v80[2 + 1 ];v176=v78[v177];for v518=v177 + (164 -(92 + (90 -19))) ,v80[4] do v176=v176   .. v78[v518] ;end v78[v80[1 + 1 ]]=v176;v72=v72 + 1 ;v80=v68[v72];v78[v80[2 -0 ]][v80[3]]=v78[v80[769 -(574 + (800 -609)) ]];v72=v72 + (1 -0) + 0 ;v80=v68[v72];v78[v80[4 -2 ]][v80[2 + 1 ]]=v80[853 -(254 + 595) ];v72=v72 + (127 -(55 + 71)) ;v80=v68[v72];v78[v80[2 -0 ]]={};v72=v72 + (1791 -(573 + 1217)) ;v80=v68[v72];v78[v80[5 -3 ]][v80[3]]=v80[1 + (5 -2) ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[941 -(714 + (364 -(43 + 96))) ]]=v80[12 -9 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v78[v80[8 -5 ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[3 -0 ];v72=v72 + (807 -(118 + 688)) ;v80=v68[v72];v177=v80[51 -(25 + 23) ];v176=v78[v177];for v519=v177 + 1 + 0 ,v80[1890 -(927 + 959) ] do v176=v176   .. v78[v519] ;end v78[v80[6 -4 ]]=v176;v72=v72 + (733 -(16 + 716)) ;v80=v68[v72];v78[v80[3 -1 ]][v80[100 -((24 -13) + 86) ]]=v78[v80[9 -5 ]];v72=v72 + (286 -(175 + 110)) ;v80=v68[v72];v78[v80[4 -2 ]][v80[14 -11 ]]=v80[1800 -(503 + 1293) ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 + 0 ]]={};v72=v72 + (1062 -(810 + 251)) ;v80=v68[v72];v78[v80[2 + 0 ]][v80[3]]=v80[4];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[3]];v72=v72 + (534 -(43 + 490)) ;v80=v68[v72];v175=v80[735 -(711 + 22) ];v78[v175]=v78[v175]();v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2]][v80[862 -(240 + 619) ]]=v78[v80[1 + 3 + 0 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 -0 ]][v80[3]]=v80[1 + 3 ];v72=v72 + (1745 -(1344 + 400)) ;v80=v68[v72];v175=v80[2];v174=v78[v175];v177=v80[408 -(255 + 150) ];for v520=1 + 0 ,v177 do v174[v520]=v78[v175 + v520 ];end else local v279=0 + 0 ;local v280;local v281;local v282;while true do if (v279==2) then for v961=4 -3 ,v80[12 -(3 + 5) ] do local v962=1739 -(404 + 1335) ;local v963;while true do if (v962==(407 -(183 + 223))) then if ((v963[1]==(54 -9)) or (4201<2150)) then v282[v961-(1 + 0) ]={v78,v963[5 -2 ]};else v282[v961-1 ]={v63,v963[3]};end v77[ #v77 + 1 + 0 ]=v282;break;end if ((338 -(118 + 220))==v962) then v72=v72 + 1 + 0 ;v963=v68[v72];v962=450 -(108 + 341) ;end end end v78[v80[2]]=v29(v280,v281,v64);break;end if (v279==(1 + 0)) then v282={};v281=v10({},{__index=function(v964,v965) local v966=0 -0 ;local v967;while true do if (v966==(1493 -(711 + 782))) then v967=v282[v965];return v967[1 -0 ][v967[2]];end end end,__newindex=function(v968,v969,v970) local v971=469 -(270 + 199) ;local v972;while true do if (v971==(0 + 0)) then v972=v282[v969];v972[1820 -(580 + 1239) ][v972[5 -3 ]]=v970;break;end end end});v279=1 + 1 ;end if (v279==(0 + 0)) then v280=v69[v80[1 + 2 ]];v281=nil;v279=1 + 0 ;end end end elseif (v81<=(7 -4)) then local v137=v80[2 + 0 ];v78[v137](v13(v78,v137 + (1168 -(645 + 522)) ,v80[1793 -(1010 + 780) ]));elseif (v81>(4 + 0)) then do return;end else local v283=(1751 -(1414 + 337)) -0 ;local v284;local v285;while true do if (v283==(0 -0)) then v284=nil;v285=nil;v78[v80[(3778 -(1642 + 298)) -(1045 + (2061 -1270)) ]]=v78[v80[7 -(11 -7) ]][v80[5 -1 ]];v72=v72 + (506 -((1041 -690) + 154)) ;v283=1575 -(1281 + 293) ;end if (v283==1) then v80=v68[v72];v285=v80[2];v78[v285]=v78[v285](v78[v285 + 1 ]);v72=v72 + 1 ;v283=268 -(28 + 238) ;end if ((v283==(10 -5)) or (3076>=4666)) then v80=v68[v72];v285=v80[1561 -(1381 + 178) ];v78[v285]=v78[v285](v13(v78,v285 + 1 + 0 + 0 ,v80[3 + 0 ]));v72=v72 + 1 + 0 + 0 ;v283=20 -14 ;end if ((v283==(3 + 1)) or (2027>=3030)) then v72=v72 + (471 -(381 + 89)) ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + 1 + (972 -(357 + 615)) ;v283=4 + 1 ;end if (v283==(4 -1)) then v285=v80[2];v284=v78[v80[1159 -(754 + 320 + 82) ]];v78[v285 + (1 -0) ]=v284;v78[v285]=v284[v80[4]];v283=4;end if (v283==((4381 -2595) -(214 + 1570))) then v80=v68[v72];v78[v80[2]]=v64[v80[1458 -(849 + 141 + 465) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v283=3;end if (v283==(14 -7)) then v78[v285]=v284[v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v64[v80[3 + 0 ]];v283=1 + 7 ;end if ((3245<=3566) and ((31 -23)==v283)) then v72=v72 + (1727 -(1668 + 58)) ;v80=v68[v72];v78[v80[(395 + 233) -(512 + 114) ]]=v78[v80[7 -4 ]][v80[4]];v72=v72 + (1 -0) ;v283=31 -22 ;end if ((v283==(5 + 4)) or (2627<=381)) then v80=v68[v72];v285=v80[1 + 1 ];v78[v285]=v78[v285](v13(v78,v285 + 1 + (1301 -(384 + 917)) ,v80[(707 -(128 + 569)) -7 ]));break;end if ((283<4544) and (v283==((3543 -(1407 + 136)) -(109 + (3772 -(687 + 1200)))))) then v80=v68[v72];v285=v80[1471 -(1269 + 200) ];v284=v78[v80[(1715 -(556 + 1154)) -2 ]];v78[v285 + (816 -((344 -246) + 717)) ]=v284;v283=(928 -(9 + 86)) -(802 + 24) ;end end end elseif (v81<=(429 -(275 + 146))) then if (v81<=6) then local v138=0 -0 ;local v139;local v140;while true do if (v138==(1 -0)) then v78[v139 + 1 + 0 + 0 ]=v140;v78[v139]=v140[v80[4 + (64 -(29 + 35)) ]];break;end if (v138==0) then v139=v80[1 + 1 ];v140=v78[v80[1 + 2 ]];v138=4 -3 ;end end elseif (v81>(19 -12)) then local v286=0 -0 ;local v287;while true do if (v286==(0 + 0)) then v287=v80[1 + 1 ];do return v78[v287](v13(v78,v287 + 1 + 0 ,v80[3 + 0 ]));end break;end end else local v288;local v289;v289=v80[1 + 1 ];v288=v78[v80[1436 -(797 + 636) ]];v78[v289 + (4 -3) ]=v288;v78[v289]=v288[v80[1623 -(1427 + 192) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[4 -2 ]]=v80[3 + 0 ];v72=v72 + 1 + 0 ;v80=v68[v72];v289=v80[328 -(192 + (399 -265)) ];v78[v289]=v78[v289](v13(v78,v289 + (1277 -((1394 -1078) + 960)) ,v80[2 + 1 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[11 -8 ]];v72=v72 + (552 -(83 + 468)) ;v80=v68[v72];v78[v80[2]]=v64[v80[3]];v72=v72 + (1807 -(1202 + 604)) ;v80=v68[v72];v78[v80[2]]=v78[v80[13 -10 ]][v80[4]];v72=v72 + (1 -0) ;v80=v68[v72];v289=v80[5 -3 ];v288=v78[v80[3]];v78[v289 + (326 -(45 + 280)) ]=v288;v78[v289]=v288[v80[4 + 0 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v64[v80[2 + 1 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v289=v80[1 + 1 ];v288=v78[v80[5 -2 ]];v78[v289 + (1912 -(340 + 1571)) ]=v288;v78[v289]=v288[v80[2 + 2 ]];v72=v72 + (1773 -(1733 + 39)) ;v80=v68[v72];v78[v80[5 -3 ]]=v80[1037 -(125 + 909) ];end elseif ((618<3820) and (v81<=10)) then if (v81>9) then v78[v80[1950 -(1096 + 852) ]]=v29(v69[v80[2 + 1 ]],nil,v64);else v78[v80[2 -0 ]]=v80[3 + 0 ];end elseif (v81==(523 -(409 + 103))) then v78[v80[2]][v80[3]]=v78[v80[4]];else local v319=0 + 0 ;local v320;local v321;while true do if ((4287>=124) and ((237 -(46 + 190))==v319)) then v72=v72 + (96 -(51 + 44)) ;v80=v68[v72];v321=v80[1 + 1 ];v320=v78[v80[3]];v78[v321 + (1318 -(1114 + 203)) ]=v320;v78[v321]=v320[v80[(1742 -(53 + 959)) -(228 + 498) ]];v319=1 + (409 -(312 + 96)) ;end if ((2 + 0)==v319) then v72=v72 + 1 ;v80=v68[v72];v78[v80[665 -(174 + 489) ]]=v80[7 -4 ];v72=v72 + (1906 -(830 + 1075)) ;v80=v68[v72];v321=v80[526 -(303 + 221) ];v319=3;end if (v319==(1274 -(231 + (1801 -763)))) then v78[v80[2 + 0 ]]=v78[v80[1165 -((456 -(147 + 138)) + 991) ]][v80[4]];v72=v72 + 1 ;v80=v68[v72];v78[v80[(907 -(813 + 86)) -6 ]]=v64[v80[7 -4 ]];break;end if (v319==((7 + 0) -4)) then v78[v321]=v78[v321](v13(v78,v321 + 1 ,v80[3 + 0 ]));v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[5 -3 ]]=v78[v80[4 -1 ]][v80[12 -8 ]];v72=v72 + ((2313 -1064) -(111 + 1137)) ;v80=v68[v72];v319=4;end if ((2569<=3918) and (v319==4)) then v78[v80[(652 -(18 + 474)) -(91 + 67) ]]=v78[v80[3]][v80[4]];v72=v72 + 1 ;v80=v68[v72];v78[v80[5 -3 ]]=v64[v80[3]];v72=v72 + 1 + 0 ;v80=v68[v72];v319=5;end if (v319==(523 -(423 + 100))) then v320=nil;v321=nil;v78[v80[1 + 1 ]][v80[7 -4 ]]=v80[4];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[773 -(326 + 151 + 294) ]]=v64[v80[(42 -29) -10 ]];v319=2 -1 ;end end end elseif (v81<=(43 -24)) then if (v81<=(726 -(530 + (1267 -(860 + 226))))) then if (v81<=(894 -((917 -(121 + 182)) + 267))) then local v141=32 -(3 + 16 + 13) ;local v142;while true do if (v141==(0 -(1240 -(988 + 252)))) then v142=v80[2];v78[v142](v78[v142 + (2 -1) ]);break;end end elseif (v81==((5 + 34) -25)) then v72=v80[1 + 2 ];else local v323=v80[2];do return v13(v78,v323,v73);end end elseif (v81<=(5 + 12)) then if (v81==(27 -11)) then v78[v80[3 -(1971 -(49 + 1921)) ]]=v64[v80[1815 -(1293 + 519) ]];elseif  not v78[v80[3 -1 ]] then v72=v72 + (2 -1) ;else v72=v80[(895 -(223 + 667)) -2 ];end elseif (v81==(77 -59)) then for v529=v80[2],v80[6 -3 ] do v78[v529]=nil;end else local v326=v80[2 + (52 -(51 + 1)) ];local v327={v78[v326](v78[v326 + (2 -1) ])};local v328=0 + 0 ;for v531=v326,v80[2 + 2 ] do v328=v328 + 1 + (0 -0) ;v78[v531]=v327[v328];end end elseif (v81<=22) then if ((v81<=((2389 -1273) -(709 + 387))) or (3154<=2030)) then local v143=v80[1127 -(146 + 979) ];v78[v143]=v78[v143](v13(v78,v143 + 1 ,v73));elseif (v81>21) then local v329;v78[v80[1860 -(673 + 1185) ]]=v64[v80[8 -5 ]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2 -0 ]]=v78[v80[1 + 2 + 0 ]][v80[(608 -(311 + 294)) + (2 -1) ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[1 + 1 ]]=v64[v80[5 -2 ]];v72=v72 + (1 -(0 + 0)) ;v80=v68[v72];v78[v80[1882 -(446 + 1434) ]]=v78[v80[3]][v80[1287 -(1040 + 243) ]];v72=v72 + (2 -(1444 -(496 + 947))) ;v80=v68[v72];v78[v80[1849 -(559 + 1288) ]]=v80[(3292 -(1233 + 125)) -(609 + 1322) ];v72=v72 + ((185 + 270) -(13 + 441)) ;v80=v68[v72];v329=v80[7 -5 ];v78[v329]=v78[v329](v78[v329 + (2 -1) ]);v72=v72 + (4 -3) ;v80=v68[v72];v78[v80[1 + 1 + 0 ]]=v80[3];v72=v72 + (3 -(1 + 1)) ;v80=v68[v72];v78[v80[1 + (1646 -(963 + 682)) ]]=v78[v80[2 + 1 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[4 -1 ];v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v78[v80[(1506 -(504 + 1000)) + 0 + 0 ]]=v78[v80[3 + 0 ]];else v78[v80[2 + 0 ]]= #v78[v80[3 + 0 + 0 ]];end elseif (v81<=24) then if (v81==(456 -(153 + 280))) then local v352=v80[5 -3 ];local v353={};for v534=1, #v77 do local v535=v77[v534];for v547=0, #v535 do local v548=0 + 0 ;local v549;local v550;local v551;while true do if ((v548==(1 + 0 + 0)) or (3761<=682)) then v551=v549[2 + 0 ];if ((v550==v78) and (v551>=v352)) then local v998=0 + 0 ;while true do if (v998==(0 + (0 -0))) then v353[v551]=v550[v551];v549[(1 + 0) -0 ]=v353;break;end end end break;end if ((2128>836) and (v548==(0 + 0))) then v549=v535[v547];v550=v549[(389 + 279) -(89 + 578) ];v548=1 + 0 ;end end end end else local v354=0 -0 ;local v355;local v356;while true do if (v354==(1049 -(572 + 477))) then v355=nil;v356=nil;v356=v80[(183 -(156 + 26)) + 1 ];v355=v78[v80[2 + 1 ]];v78[v356 + 1 + 0 ]=v355;v78[v356]=v355[v80[4]];v354=87 -(49 + 35 + 2) ;end if (v354==(6 -2)) then v356=v80[2];v78[v356]=v78[v356](v13(v78,v356 + 1 + (0 -0) ,v80[845 -(497 + 345) ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]={};v72=v72 + ((1498 -(149 + 15)) -(605 + 728)) ;v354=5;end if (v354==6) then v80=v68[v72];if  not v78[v80[2 + 0 ]] then v72=v72 + (1 -0) ;else v72=v80[1 + 2 ];end break;end if ((7 -5)==v354) then v78[v356]=v78[v356](v13(v78,v356 + 1 + 0 ,v80[7 -4 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v356=v80[491 -(457 + 32) ];v355=v78[v80[3]];v78[v356 + 1 ]=v355;v354=3;end if ((v354==1) or (2361<=1063)) then v72=v72 + (961 -(890 + 70)) ;v80=v68[v72];v78[v80[(118 -(39 + 78)) + 1 ]]=v80[1405 -(832 + (1052 -(14 + 468))) ];v72=v72 + 1 ;v80=v68[v72];v356=v80[2 + 0 ];v354=1 + 1 ;end if ((v354==(17 -12)) or (1790>=3221)) then v80=v68[v72];v78[v80[(2 -1) + 1 ]][v80[3]]=v80[800 -(588 + 208) ];v72=v72 + 1 ;v80=v68[v72];v78[v80[5 -3 ]]=v64[v80[(5039 -3236) -(884 + 916) ]];v72=v72 + ((1 + 0) -(0 + 0)) ;v354=1 + 3 + 2 ;end if ((4459>=3851) and (v354==3)) then v78[v356]=v355[v80[657 -(232 + 421) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[3]];v72=v72 + 1 ;v80=v68[v72];v354=1893 -(412 + 1157 + 320) ;end end end elseif (v81>(7 + 18)) then local v357=0;local v358;while true do if (v357==(0 + 0)) then v358=nil;v78[v80[6 -4 ]]=v64[v80[3]];v72=v72 + (606 -(316 + 289)) ;v80=v68[v72];v358=v80[2];v78[v358]=v78[v358]();v357=2 -1 ;end if ((v357==(1 + 3)) or (2969<=1860)) then v78[v80[2]][v80[1456 -(666 + 787) ]]=v80[(820 -391) -(356 + 4 + (228 -163)) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[256 -(79 + 175) ]][v80[(1 + 3) -1 ]]=v80[4];v72=v72 + 1 ;v80=v68[v72];v357=(55 -(12 + 39)) + 1 ;end if ((v357==(15 -10)) or (2123==39)) then v78[v80[3 -1 ]][v80[(840 + 62) -((1556 -1053) + (1410 -1014)) ]]=v78[v80[185 -(92 + 89) ]];break;end if ((v357==(5 -2)) or (2132<=201)) then v78[v80[1 + 1 + 0 ]]=v78[v80[2 + 1 ]][v80[15 -11 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[4 -2 ]]={};v72=v72 + 1 ;v80=v68[v72];v357=4 + 0 ;end if (v357==(1 + 1)) then v72=v72 + 1 ;v80=v68[v72];v358=v80[2];v78[v358]=v78[v358]();v72=v72 + (2 -1) ;v80=v68[v72];v357=3;end if (v357==(1 + 0)) then v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2]]=v78[v80[3]][v80[1248 -(485 + 759) ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1191 -(442 + 747) ]]=v64[v80[1138 -(832 + 303) ]];v357=948 -(88 + 858) ;end end else local v359=0 + 0 ;local v360;local v361;while true do if ((v359==1) or (4338>=4477)) then for v973=v360 + 1 + 0 + 0 ,v80[1 + (7 -4) ] do v361=v361   .. v78[v973] ;end v78[v80[791 -(766 + 23) ]]=v361;break;end if ((v359==(0 -0)) or (1732>=3545)) then v360=v80[3 -0 ];v361=v78[v360];v359=2 -1 ;end end end elseif ((1125>=64) and (v81<=(135 -95))) then if ((v81<=((737 + 369) -(1036 + 37))) or (3215>4005)) then if ((2415>665) and (v81<=(21 + 8))) then if (v81<=(52 -25)) then v78[v80[2 + 0 ]]=v63[v80[1483 -(641 + 839) ]];elseif (v81>((4547 -3606) -(910 + 3))) then local v362=0 -0 ;local v363;while true do if ((v362==(1684 -(1466 + 218))) or (1089>2205)) then v363=v80[2];do return v13(v78,v363,v363 + v80[2 + (1711 -(1596 + 114)) ] );end break;end end else local v364=1148 -((1451 -895) + 592) ;while true do if (v364==(2 + 3)) then v78[v80[810 -(329 + 479) ]]=v78[v80[857 -(174 + (1393 -(164 + 549))) ]];v72=v72 + (1439 -(1059 + 379)) ;v80=v68[v72];v364=20 -14 ;end if ((2==v364) or (2146<=628)) then v78[v80[2]]=v80[3];v72=v72 + 1 ;v80=v68[v72];v364=5 -2 ;end if (v364==4) then v78[v80[2 + 0 ]]=v80[742 -(396 + 343) ];v72=v72 + 1 + (0 -0) ;v80=v68[v72];v364=1482 -(29 + 1448) ;end if (v364==(1390 -(135 + 1254))) then v78[v80[7 -5 ]]=v78[v80[13 -10 ]][v80[3 + 1 ]];v72=v72 + (1528 -(389 + 1138)) ;v80=v68[v72];v364=576 -(102 + 472) ;end if ((v364==(6 + 0)) or (3415>=4449)) then v78[v80[2 + 0 ]]=v80[3 + 0 ];v72=v72 + (1546 -(320 + 1225)) ;v80=v68[v72];v364=11 -(3 + 1) ;end if ((0 + 0)==v364) then v78[v80[2]]=v80[3];v72=v72 + (1465 -(27 + 130 + 1307)) ;v80=v68[v72];v364=(2252 -(145 + 247)) -(821 + 1038) ;end if (v364==(7 -4)) then v78[v80[1 + 1 ]]=v78[v80[3]][v80[6 -2 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v364=4;end if (v364==(17 -10)) then v78[v80[1028 -(834 + 192) ]]=v78[v80[1 + 2 ]][v80[2 + 2 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v364=12 -4 ;end if (v364==(312 -(300 + 4))) then if v78[v80[1 + 1 ]] then v72=v72 + (2 -1) ;else v72=v80[(300 + 65) -(52 + 60 + 250) ];end break;end end end elseif ((v81<=31) or (1765>4310)) then if (v81==(12 + 18)) then if ((906>200) and (v78[v80[(11 -7) -2 ]]==v80[3 + 1 ])) then v72=v72 + 1 + 0 ;else v72=v80[3];end else local v365;local v366;v78[v80[2 + 0 ]]=v78[v80[2 + 1 ]][v80[3 + 1 ]];v72=v72 + (1415 -(1001 + 413)) ;v80=v68[v72];v78[v80[4 -2 ]]=v80[885 -(244 + 638) ];v72=v72 + (694 -(121 + 506 + 66)) ;v80=v68[v72];v78[v80[5 -3 ]]=v78[v80[605 -(512 + 90) ]][v80[4]];v72=v72 + (1907 -(1665 + 208 + 33)) ;v80=v68[v72];v78[v80[719 -(373 + 344) ]]=v80[2 + 1 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[5 -(4 -1) ]]=v78[v80[4 -(721 -(254 + 466)) ]][v80[1103 -(35 + 1064) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[4 -2 ]]=v80[3];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[1239 -(298 + 938) ]][v80[1263 -(233 + 1026) ]];v72=v72 + (1667 -(636 + 1030)) ;v80=v68[v72];v78[v80[2 + (560 -(544 + 16)) ]]=v80[3 + 0 ];v72=v72 + 1 + (0 -0) ;v80=v68[v72];v366=v80[1 + 2 ];v365=v78[v366];for v536=v366 + (222 -(55 + 166)) ,v80[1 + 3 ] do v365=v365   .. v78[v536] ;end v78[v80[1 + 1 ]]=v365;v72=v72 + (3 -(630 -(294 + 334))) ;v80=v68[v72];v78[v80[2]][v80[3]]=v78[v80[257 -(236 + 17) ]];end elseif (v81==(329 -(36 + 261))) then if (v78[v80[3 -1 ]] or (3072<=2133)) then v72=v72 + (1369 -(34 + 1334)) ;else v72=v80[2 + 1 ];end else local v387=v80[1 + 1 + 0 ];v78[v387]=v78[v387]();end elseif (v81<=((1027 + 292) -((3897 -2862) + 248))) then if ((904<=1400) and (v81<=(55 -(20 + 1)))) then local v147;local v148;local v149;local v150;local v151;local v152;v78[v80[(9 -7) + 0 ]]={};v72=v72 + (320 -(134 + 185)) ;v80=v68[v72];v78[v80[1135 -(549 + 584) ]][v80[688 -(314 + 371) ]]=v78[v80[13 -9 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[970 -(478 + 490) ]][v80[2 + 1 ]]=v78[v80[1176 -(786 + 386) ]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[1381 -(1055 + 324) ]][v80[3]]=v80[1344 -(1093 + 247) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]][v80[1 + 2 ]]=v78[v80[15 -11 ]];v72=v72 + (3 -2) ;v80=v68[v72];v152=v80[5 -3 ];v78[v152](v78[v152 + (2 -1) ]);v72=v72 + 1 + 0 ;v80=v68[v72];v152=v80[7 -5 ];v151={};for v170=3 -2 , #v77 do v150=v77[v170];for v389=0 + 0 , #v150 do v149=v150[v389];v148=v149[1];v147=v149[4 -2 ];if ((v148==v78) and (v147>=v152)) then v151[v147]=v148[v147];v149[689 -(364 + 324) ]=v151;end end end v72=v72 + ((2 + 0) -(1 + 0)) ;v80=v68[v72];do return;end elseif (v81>(83 -48)) then v78[v80[1 + 1 ]][v80[12 -9 ]]=v80[5 -1 ];else v78[v80[2]]=v78[v80[3]] * v80[11 -7 ] ;end elseif (v81<=38) then if (v81>((2099 -(413 + 381)) -(1249 + 19))) then v78[v80[2]]={};else local v397=0 + 0 ;local v398;local v399;local v400;while true do if (v397==(11 -8)) then v80=v68[v72];v78[v80[1088 -(686 + 400) ]]=v78[v80[3 + 0 ]];v72=v72 + (230 -(4 + 69 + 156)) ;v80=v68[v72];v78[v80[(1 -0) + 1 ]]=v80[(2113 -1299) -((2691 -(582 + 1388)) + 90) ];v397=1 + 3 ;end if (v397==(0 -0)) then v398=nil;v399=nil;v400=nil;v78[v80[472 -(224 + 246) ]]=v64[v80[4 -1 ]];v72=v72 + (1 -0) ;v397=1 -0 ;end if (v397==(1 + 0)) then v80=v68[v72];v400=v80[2];v78[v400]=v78[v400]();v72=v72 + 1 + 0 ;v80=v68[v72];v397=2;end if ((v397==(3 + 1)) or (718>3863)) then v72=v72 + 1 ;v80=v68[v72];v399=v80[5 -2 ];v398=v78[v399];for v974=v399 + (3 -2) ,v80[3 + 1 ] do v398=v398   .. v78[v974] ;end v397=369 -(326 + 38) ;end if ((v397==(518 -(203 + 310))) or (2483==2223)) then v78[v80[1995 -(1238 + 755) ]]=v398;v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1536 -(709 + 825) ]][v80[4 -1 ]]=v78[v80[(14 -9) -1 ]];v72=v72 + (865 -(196 + 668)) ;v397=(32 -9) -17 ;end if (v397==(3 -1)) then v78[v80[835 -(171 + 662) ]]=v78[v80[96 -(4 + 89) ]][v80[13 -9 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v80[13 -10 ];v72=v72 + 1 + 0 ;v397=1489 -(35 + 1451) ;end if (v397==(1459 -((648 -(47 + 573)) + 1425))) then v80=v68[v72];v78[v80[1995 -(941 + 1052) ]][v80[3 + 0 ]]=v80[1518 -(822 + 692) ];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 -0 ]]={};break;end end end elseif (v81>(7 + 12 + 20)) then local v401=v80[(1269 -970) -((73 -28) + 252) ];local v402=v78[v401];local v403=v80[3];for v537=1 + 0 ,v403 do v402[v537]=v78[v401 + v537 ];end else local v404;v78[v80[2]]={};v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]][v80[3]]=v80[9 -5 ];v72=v72 + ((2098 -(1269 + 395)) -(114 + 319)) ;v80=v68[v72];v78[v80[2]][v80[3 -0 ]]=v80[4 -0 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 -0 ]]=v64[v80[5 -2 ]];v72=v72 + (1964 -(556 + 1407)) ;v80=v68[v72];v78[v80[1208 -((1233 -(76 + 416)) + 465) ]]=v80[468 -(170 + 295) ];v72=v72 + 1 + 0 ;v80=v68[v72];v404=v80[2 + 0 ];v78[v404]=v78[v404](v78[v404 + 1 ]);v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 + 0 ]][v80[2 + (444 -(319 + 124)) ]]=v78[v80[4]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[(1009 -(564 + 443)) + 0 ]]={};v72=v72 + (1231 -(957 + 273)) ;v80=v68[v72];v78[v80[2]]={};v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]][v80[3]]=v80[15 -11 ];end elseif (v81<=(123 -76)) then if (v81<=(131 -88)) then if (v81<=(203 -162)) then local v165=v80[1782 -(389 + 1391) ];v78[v165]=v78[v165](v78[v165 + 1 + (0 -0) ]);elseif (v81==(5 + 37)) then local v422;v78[v80[4 -2 ]]=v64[v80[954 -(783 + (626 -(337 + 121))) ]];v72=v72 + (3 -2) ;v80=v68[v72];v422=v80[2 + 0 ];v78[v422]=v78[v422]();v72=v72 + (312 -(309 + 2)) ;v80=v68[v72];v78[v80[5 -3 ]][v80[1215 -(1090 + 122) ]]=v80[2 + 2 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v64[v80[(25 -16) -6 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v422=v80[1120 -(628 + 490) ];v78[v422]=v78[v422]();v72=v72 + 1 + (0 -0) ;v80=v68[v72];v78[v80[4 -(1913 -(1261 + 650)) ]][v80[13 -10 ]]=v80[4];v72=v72 + (775 -(431 + 343)) ;v80=v68[v72];v78[v80[3 -1 ]]=v64[v80[8 -5 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v422=v80[1 + 1 ];v78[v422]=v78[v422]();v72=v72 + (1696 -(556 + 1139)) ;v80=v68[v72];v78[v80[2]][v80[18 -(6 + 9) ]]=v80[1 + 3 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[171 -(12 + 16 + (224 -83)) ]]=v64[v80[2 + 1 ]];else v78[v80[2 -0 ]]=v78[v80[3 + 0 ]][v80[1321 -(486 + 831) ]];v72=v72 + ((1819 -(772 + 1045)) -1) ;v80=v68[v72];v78[v80[6 -4 ]]=v78[v80[1 + 0 + 2 ]][v80[12 -(152 -(102 + 42)) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1265 -(668 + 595) ]]=v78[v80[3]][v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1846 -(1524 + 320) ]]=v78[v80[1 + 2 ]][v80[10 -6 ]];v72=v72 + (291 -(23 + (1537 -(1049 + 221)))) ;v80=v68[v72];v78[v80[1946 -(1129 + 815) ]]={};v72=v72 + (388 -(371 + 16)) ;v80=v68[v72];v78[v80[1752 -(1326 + 424) ]][v80[5 -2 ]]=v80[14 -10 ];v72=v72 + (119 -(88 + 30)) ;v80=v68[v72];v78[v80[773 -(720 + 51) ]]=v80[(162 -(18 + 138)) -3 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[1778 -((1030 -609) + 1355) ]]=v78[v80[3]][v80[6 -2 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1085 -(286 + 797) ]]=v80[10 -7 ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[441 -(397 + 42) ]]=v78[v80[3]][v80[2 + 2 ]];end elseif ((1405>=829) and (v81<=(845 -(24 + 776)))) then if (v81==(67 -23)) then local v462=785 -(222 + 563) ;local v463;local v464;local v465;while true do if ((3341<3863) and (v462==8)) then v72=v72 + 1 ;v80=v68[v72];v78[v80[(1105 -(67 + 1035)) -1 ]][v80[3 + 0 ]]=v78[v80[194 -(23 + 167) ]];break;end if (v462==((2150 -(136 + 212)) -(690 + 1108))) then v72=v72 + 1 + 0 ;v80=v68[v72];v465=v80[2 + 0 ];v78[v465]=v78[v465](v78[v465 + (849 -(40 + 808)) ]);v462=21 -16 ;end if (v462==1) then v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[(9 + 2) -8 ];v72=v72 + 1 ;v462=2 + 0 + (1604 -(240 + 1364)) ;end if (v462==2) then v80=v68[v72];v78[v80[2 + 0 ]]=v64[v80[2 + 1 ]];v72=v72 + (572 -(47 + 524)) ;v80=v68[v72];v462=2 + 1 ;end if (v462==7) then v78[v80[5 -3 ]][v80[4 -(1083 -(1050 + 32)) ]]=v78[v80[8 -4 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1728 -(1165 + 561) ]][v80[1 + 2 ]]=v80[4];v462=8;end if (v462==(9 -6)) then v78[v80[2]]=v78[v80[3]][v80[2 + 2 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[7 -5 ]]=v80[482 -(341 + 138) ];v462=4;end if ((3840>1000) and (v462==(2 + 0 + 4))) then for v975=v464 + (1 -0) ,v80[4] do v463=v463   .. v78[v975] ;end v78[v80[328 -(89 + 237) ]]=v463;v72=v72 + (3 -2) ;v80=v68[v72];v462=14 -7 ;end if ((v462==5) or (2660<1908)) then v72=v72 + (882 -(581 + 300)) ;v80=v68[v72];v464=v80[(2278 -(331 + 724)) -(855 + 365) ];v463=v78[v464];v462=13 -(1 + 6) ;end if ((v462==0) or (2288>2511)) then v463=nil;v464=nil;v465=nil;v78[v80[1 + 1 ]]={};v462=1;end end else v78[v80[1237 -(1030 + 205) ]]=v78[v80[3]];end elseif (v81==(44 + 2)) then do return v78[v80[2]];end else local v468=(644 -(269 + 375)) + 0 ;local v469;local v470;local v471;local v472;local v473;local v474;while true do if (v468==((1029 -(267 + 458)) -(156 + 130))) then v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2]]=v80[4 -1 ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[1 + 1 ]]=v64[v80[2 + 1 ]];v72=v72 + (70 -(10 + 59)) ;v80=v68[v72];v468=6 + 13 ;end if (v468==(7 + 14)) then v78[v80[9 -7 ]]=v80[3];v72=v72 + (1164 -(671 + 492)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v64[v80[5 -2 ]];v72=v72 + (1216 -(369 + 846)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[(821 -(667 + 151)) + 0 ]][v80[1949 -(1036 + 909) ]];v72=v72 + (1498 -(1410 + 87)) + 0 ;v468=36 -14 ;end if ((204 -(11 + (2089 -(1504 + 393))))==v468) then v78[v80[(5 -3) + 0 ]]=v80[3];v72=v72 + (176 -((350 -215) + 40)) ;v80=v68[v72];v474=v80[3];v473=v78[v474];for v976=v474 + (2 -1) ,v80[3 + (797 -(461 + 335)) ] do v473=v473   .. v78[v976] ;end v78[v80[4 -2 ]]=v473;v72=v72 + 1 ;v468=2;end if (((19 -6)==v468) or (3592>=4409)) then v78[v80[2]]=v78[v80[3]];v72=v72 + 1 ;v80=v68[v72];v78[v80[178 -(50 + 126) ]]=v80[8 -5 ];v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v78[v80[(3176 -(1730 + 31)) -(1233 + 180) ]]=v78[v80[3]];v72=v72 + 1 ;v468=983 -(522 + (2114 -(728 + 939))) ;end if (v468==(1454 -(107 + 1314))) then v78[v80[1 + 1 ]]=v80[8 -5 ];v72=v72 + 1 + 0 ;v80=v68[v72];v472=v80[2];v470,v471=v71(v78[v472](v13(v78,v472 + (1 -0) ,v80[3])));v73=(v471 + v472) -1 ;v469=(0 -0) -0 ;for v977=v472,v73 do v469=v469 + 1 ;v78[v977]=v470[v469];end v468=1944 -((1451 -735) + 1194) ;end if ((v468==16) or (4841<2991)) then v474=v80[1 + 2 ];v473=v78[v474];for v980=v474 + 1 ,v80[1 + 3 ] do v473=v473   .. v78[v980] ;end v78[v80[505 -(74 + 429) ]]=v473;v72=v72 + (1 -(0 -0)) ;v80=v68[v72];v78[v80[1 + 1 ]][v80[3]]=v78[v80[8 -4 ]];v72=v72 + 1 + (1068 -(138 + 930)) ;v468=17;end if (v468==(70 -(43 + 4))) then v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[435 -(279 + 121 + 33) ]]=v78[v80[3]][v80[782 -(454 + 324) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[19 -(12 + 5) ]]=v80[2 + 1 ];v72=v72 + (2 -1) ;v80=v68[v72];v468=9 + 15 ;end if (v468==(1120 -(277 + 816))) then v80=v68[v72];v78[v80[8 -6 ]]=v80[1186 -(1058 + 125) ];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v64[v80[978 -(815 + 160) ]];v72=v72 + (4 -3) ;v80=v68[v72];v78[v80[4 -2 ]]=v64[v80[1 + 2 ]];v468=28;end if ((10==v468) or (2863<=2540)) then v78[v80[2]]=v80[8 -5 ];v72=v72 + 1 ;v80=v68[v72];v474=v80[1901 -(41 + 1857) ];v473=v78[v474];for v981=v474 + (1894 -(1222 + 671)) ,v80[10 -6 ] do v473=v473   .. v78[v981] ;end v78[v80[2 -0 ]]=v473;v72=v72 + 1 ;v468=(1023 + 170) -(229 + 953) ;end if (v468==28) then v72=v72 + (1775 -(1111 + 663)) ;v80=v68[v72];v472=v80[1581 -(874 + 705) ];v474=v78[v80[1 + 2 ]];v78[v472 + 1 + 0 ]=v474;v78[v472]=v474[v80[7 -3 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v468=29;end if (v468==(101 -76)) then v473=v78[v474];for v982=v474 + (680 -(642 + 37)) ,v80[1 + 3 ] do v473=v473   .. v78[v982] ;end v78[v80[1 + 1 ]]=v473;v72=v72 + 1 ;v80=v68[v72];v78[v80[4 -2 ]][v80[457 -(233 + (1987 -(459 + 1307))) ]]=v78[v80[8 -4 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v468=26;end if ((3057<=4822) and (v468==(1548 -(718 + 823)))) then v80=v68[v72];v78[v80[2 + 0 ]]=v64[v80[808 -(266 + 539) ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1227 -(636 + (2459 -(474 + 1396))) ]]=v78[v80[3]][v80[9 -5 ]];v72=v72 + 1 ;v80=v68[v72];v472=v80[3 -1 ];v468=7 + 1 ;end if (v468==(8 + 12)) then v80=v68[v72];v472=v80[2];v78[v472]=v78[v472](v78[v472 + (1016 -(657 + 358)) ]);v72=v72 + (2 -(1 -0)) ;v80=v68[v72];v78[v80[4 -(2 + 0) ]]= #v78[v80[(4 + 1186) -(1151 + 36) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v468=6 + 15 ;end if ((v468==(92 -61)) or (4688<1489)) then v472=v80[1834 -(1552 + 280) ];v474=v78[v80[837 -(64 + 770) ]];v78[v472 + 1 + 0 ]=v474;v78[v472]=v474[v80[8 -4 ]];v72=v72 + 1 ;v80=v68[v72];v472=v80[1 + 1 ];v78[v472]=v78[v472](v78[v472 + 1 ]);v468=1275 -(157 + 1086) ;end if (v468==(63 -31)) then v72=v72 + 1 ;v80=v68[v72];v472=v80[(22 -14) -6 ];v474=v78[v80[3 -0 ]];v78[v472 + (1 -0) ]=v474;v78[v472]=v474[v80[823 -(599 + 220) ]];v72=v72 + (1 -0) ;v80=v68[v72];v468=1964 -(1813 + 118) ;end if (v468==(9 + 3)) then v72=v72 + ((155 + 1063) -(841 + 376)) ;v80=v68[v72];v78[v80[2 -0 ]][v80[9 -6 ]]=v80[4];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[5 -3 ]]=v80[862 -(464 + 395) ];v72=v72 + ((8 -6) -(592 -(562 + 29))) ;v80=v68[v72];v468=13;end if ((v468==(15 + 15)) or (832>=4770)) then v72=v72 + (838 -(467 + 370)) ;v80=v68[v72];v78[v80[(3 + 0) -1 ]]=v78[v80[3]][v80[3 + 1 ]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2]]=v78[v80[1 + 2 ]][v80[(1427 -(374 + 1045)) -4 ]];v72=v72 + (521 -(150 + 370)) ;v80=v68[v72];v468=1313 -(74 + 1208) ;end if (v468==(83 -49)) then v72=v72 + 1 ;v80=v68[v72];v472=v80[2];v78[v472]=v78[v472](v13(v78,v472 + (4 -3) ,v73));v72=v72 + 1 + 0 ;v80=v68[v72];if  not v78[v80[392 -(14 + 376) ]] then v72=v72 + (1 -0) ;else v72=v80[2 + 1 ];end break;end if ((3 + 0)==v468) then v72=v72 + 1 ;v80=v68[v72];v78[v80[2]][v80[3 + 0 ]]=v80[11 -7 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[3 + 0 ];v72=v72 + 1 ;v80=v68[v72];v468=82 -(23 + 55) ;end if (v468==(9 -5)) then v78[v80[2]]=v78[v80[3]][v80[3 + 1 + 0 ]];v72=v72 + 1 + (0 -0) ;v80=v68[v72];v78[v80[2]]=v80[4 -1 ];v72=v72 + (639 -(448 + 190)) + 0 ;v80=v68[v72];v78[v80[(292 + 611) -(652 + 249) ]]=v78[v80[7 -4 ]];v72=v72 + 1 ;v468=(846 + 1027) -(708 + 1160) ;end if ((1934==1934) and (v468==(0 -0))) then v469=nil;v470,v471=nil;v472=nil;v473=nil;v474=nil;v78[v80[2]]=v78[v80[5 -2 ]];v72=v72 + (28 -(10 + 17)) ;v80=v68[v72];v468=1 + 0 ;end if (v468==22) then v80=v68[v72];v78[v80[2]]=v78[v80[(1131 + 604) -(1400 + (1276 -944)) ]][v80[7 -3 ]];v72=v72 + (1909 -((751 -509) + 1666)) ;v80=v68[v72];v78[v80[1496 -(1307 + 187) ]]=v80[2 + 1 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v64[v80[11 -8 ]];v468=20 + 3 ;end if ((v468==(964 -(850 + 90))) or (4524<=2618)) then v472=v80[3 -1 ];v78[v472]=v78[v472](v78[v472 + 1 ]);v72=v72 + (1391 -(360 + 1030)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[6 -3 ];v72=v72 + (2 -1) ;v80=v68[v72];v474=v80[3 -(0 -0) ];v468=25;end if (v468==17) then v80=v68[v72];v78[v80[2]][v80[1664 -(909 + 752) ]]=v80[1227 -(109 + 1114) ];v72=v72 + 1 ;v80=v68[v72];v78[v80[(686 -(232 + 451)) -1 ]]={};v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v78[v80[244 -(6 + 236) ]][v80[3]]=v80[3 + 1 ];v468=15 + 3 ;end if ((35 -20)==v468) then v72=v72 + (1 -(0 + 0)) ;v80=v68[v72];v78[v80[2]]=v78[v80[3]];v72=v72 + (1134 -(1076 + 57)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[692 -(579 + 110) ];v72=v72 + (565 -(510 + 54)) + 0 ;v80=v68[v72];v468=15 + 1 ;end if ((v468==(5 + 4)) or (4166>=4169)) then v80=v68[v72];v78[v80[2]]=v78[v80[410 -(174 + 233) ]] -v78[v80[11 -7 ]] ;v72=v72 + (1 -0) ;v80=v68[v72];v472=v80[1 + 1 ];v78[v472]=v78[v472](v13(v78,v472 + (1175 -(663 + 511)) ,v80[(5 -2) + 0 ]));v72=v72 + 1 + (36 -(13 + 23)) ;v80=v68[v72];v468=10;end if (v468==((81 -39) -(39 -11))) then v80=v68[v72];v78[v80[3 -1 ]]=v80[2 + 1 ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[4 -2 ]]=v78[v80[3]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[3 -1 ]]=v80[3 + 0 ];v468=2 + 13 ;end if ((741 -(478 + 244))==v468) then v78[v80[1090 -(830 + 258) ]]=v78[v80[520 -(440 + 77) ]][v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v472=v80[7 -(17 -12) ];v474=v78[v80[1559 -(655 + 901) ]];v78[v472 + 1 + 0 ]=v474;v78[v472]=v474[v80[3 + 1 ]];v72=v72 + 1 + 0 ;v468=12 + 2 + (1447 -(860 + 581)) ;end if (v468==(7 -(18 -13))) then v80=v68[v72];v78[v80[1447 -(695 + 750) ]][v80[9 -6 ]]=v78[v80[6 -2 ]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[353 -(285 + 66) ]][v80[3]]=v80[4];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 + 0 ]]={};v468=1313 -(682 + 628) ;end if (v468==(1 + 4)) then v80=v68[v72];v472=v80[301 -(176 + 123) ];v78[v472]=v78[v472]();v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[272 -(239 + 30) ];v72=v72 + 1 + 0 ;v80=v68[v72];v468=6 + 0 ;end if ((v468==29) or (3725<86)) then v78[v80[2]]=v80[4 -(242 -(237 + 4)) ];v72=v72 + (2 -1) ;v80=v68[v72];v472=v80[317 -(306 + 9) ];v78[v472]=v78[v472](v13(v78,v472 + (3 -2) ,v80[1 + 2 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[8 -5 ]][v80[1379 -(1140 + 235) ]];v468=20 + 10 ;end if (v468==(8 + 0)) then v78[v472]=v78[v472]();v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[55 -((77 -44) + (47 -28)) ]][v80[2 + 2 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[(1 -0) + 1 ]]=v78[v80[5 -2 ]] * v80[4 + 0 + 0 ] ;v72=v72 + (690 -(586 + 103)) ;v468=1 + 8 ;end if (v468==(79 -(31 + 22))) then v78[v80[1490 -(1309 + 179) ]][v80[5 -2 ]]=v80[2 + 2 ];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2]]={};v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2]][v80[3 + 0 ]]=v80[4];v72=v72 + 1 ;v468=27;end if ((v468==(12 -6)) or (4822<=153)) then v78[v80[2]]=v64[v80[5 -(1 + 1) ]];v72=v72 + (610 -(295 + 314)) ;v80=v68[v72];v78[v80[4 -2 ]]=v78[v80[1965 -(1300 + 662) ]][v80[12 -8 ]];v72=v72 + (1756 -(1178 + 577)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[3];v72=v72 + (2 -1) ;v468=7;end if (v468==11) then v80=v68[v72];v78[v80[1407 -(851 + 554) ]][v80[3]]=v78[v80[4 + 0 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[3 -1 ]][v80[3]]=v80[306 -(115 + 187) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]={};v468=12 + 0 ;end end end elseif ((v81<=(197 -147)) or (1816>2293)) then if (v81<=(1209 -(160 + 1001))) then local v167=0 + 0 ;local v168;local v169;while true do if (v167==(1 + 0)) then for v557=v168 + ((1 + 0) -0) ,v80[361 -(237 + 121) ] do v7(v169,v78[v557]);end break;end if (v167==((2323 -(85 + 1341)) -(525 + 372))) then v168=v80[3 -1 ];v169=v78[v168];v167=3 -2 ;end end elseif (v81==((325 -134) -(96 + (129 -83)))) then local v475;local v476,v477;local v478;local v479;local v480;v480=v80[780 -(643 + 134) ];v479=v78[v480];for v542=v480 + 1 + 0 ,v80[4] do v479=v479   .. v78[v542] ;end v78[v80[4 -(374 -(45 + 327)) ]]=v479;v72=v72 + (3 -2) ;v80=v68[v72];v478=v80[2 + 0 ];v476,v477=v71(v78[v478](v13(v78,v478 + (1 -0) ,v80[5 -(3 -1) ])));v73=(v477 + v478) -((1222 -(444 + 58)) -(316 + 403)) ;v475=0;for v543=v478,v73 do v475=v475 + 1 + 0 ;v78[v543]=v476[v475];end v72=v72 + (2 -1) ;v80=v68[v72];v478=v80[1 + 1 ];v78[v478]=v78[v478](v13(v78,v478 + 1 ,v73));v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[1 + 2 ]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[9 -7 ]]=v80[(3 + 2) -2 ];v72=v72 + 1 + 0 ;v80=v68[v72];v72=v80[5 -2 ];else local v493=0 + 0 ;local v494;local v495;local v496;local v497;while true do if (v493==(0 -0)) then v494=v80[19 -(12 + 1 + 4) ];v495,v496=v71(v78[v494](v13(v78,v494 + 1 ,v80[2 + 1 ])));v493=3 -2 ;end if (v493==(3 -1)) then for v983=v494,v73 do local v984=0 -(0 -0) ;while true do if ((v984==0) or (2823>=3213)) then v497=v497 + ((1734 -(64 + 1668)) -1) ;v78[v983]=v495[v497];break;end end end break;end if ((4702>2133) and (v493==(1 + 0))) then v73=(v496 + v494) -(1974 -(1656 + 317)) ;v497=1973 -(1227 + 746) ;v493=2 + 0 ;end end end elseif (v81<=((128 -86) + 10)) then if ((v81>((250 -115) -84)) or (3335<=3201)) then if (v78[v80[9 -7 ]]==v78[v80[4]]) then v72=v72 + ((849 -(415 + 79)) -(5 + 349)) ;else v72=v80[14 -11 ];end else local v498=1271 -(266 + 1005) ;local v499;while true do if ((v498==(0 + 0)) or (3347<1460)) then v499=v80[2];v78[v499]=v78[v499](v13(v78,v499 + (3 -2) ,v80[3 -0 ]));break;end end end elseif (v81>(1749 -(561 + 1135))) then v78[v80[2 -(0 + 0) ]]=v78[v80[9 -6 ]] -v78[v80[1070 -(507 + 559) ]] ;else v78[v80[4 -2 ]]=v78[v80[494 -(142 + 349) ]][v80[(6 + 6) -8 ]];end v72=v72 + (389 -((290 -78) + 88 + 88)) ;break;end if (((905 -(250 + 655))==v89) or (4691<4371)) then v80=v68[v72];v81=v80[2 -1 ];v89=1 -0 ;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
